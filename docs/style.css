@charset "UTF-8";
/* Функции */
/* Утилиты */
/* Сбросы */
.button {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  vertical-align: middle;
  display: inline-block;
  white-space: normal;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
  -webkit-box-shadow: none;
  box-shadow: none;
  line-height: 1.1;
  max-width: none;
  outline: none;
  border: none;
  min-width: 0;
  padding: 0;
}

.button {
  text-decoration: none;
  cursor: pointer;
  color: inherit;
}

body, div, dl, dt, dd, ul, li, h1, h2, h3, h4, h5, h6, pre, code, form, fieldset, input, textarea, p, blockquote, th, td {
  margin: 0;
  padding: 0;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

fieldset, img, abbr {
  border: 0;
}

address, caption, cite, code, dfn, em, strong, th, var {
  font-style: normal;
  font-weight: normal;
}

ul li {
  list-style: none;
}

caption, th {
  text-align: left;
}

h1, h2, h3, h4, h5, h6 {
  font-size: 100%;
  font-weight: normal;
}

sup {
  vertical-align: text-top;
}

sub {
  vertical-align: text-bottom;
}

input, textarea, select {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
}

legend {
  color: #000;
}

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section, main {
  display: block;
}

img {
  max-width: 100%;
  height: auto;
}

@font-face {
  font-family: "MR";
  src: url("fonts/Montserrat-Regular.eot?#iefix") format("embedded-opentype"), url("fonts/Montserrat-Regular.woff") format("woff"), url("fonts/Montserrat-Regular.woff2") format("woff2"), url("fonts/Montserrat-Regular.ttf") format("truetype");
  font-weight: "normal";
  font-style: normal;
}
@font-face {
  font-family: "MM";
  src: url("fonts/Montserrat-Medium.eot?#iefix") format("embedded-opentype"), url("fonts/Montserrat-Medium.woff") format("woff"), url("fonts/Montserrat-Medium.woff2") format("woff2"), url("fonts/Montserrat-Medium.ttf") format("truetype");
  font-weight: "normal";
  font-style: normal;
}
@font-face {
  font-family: "MB";
  src: url("fonts/Montserrat-Bold.eot?#iefix") format("embedded-opentype"), url("fonts/Montserrat-Bold.woff") format("woff"), url("fonts/Montserrat-Bold.woff2") format("woff2"), url("fonts/Montserrat-Bold.ttf") format("truetype");
  font-weight: "normal";
  font-style: normal;
}
@font-face {
  font-family: "PB";
  src: url("fonts/PhonkSans-Bold.eot?#iefix") format("embedded-opentype"), url("fonts/PhonkSans-Bold.woff") format("woff"), url("fonts/PhonkSans-Bold.woff2") format("woff2"), url("fonts/PhonkSans-Bold.ttf") format("truetype");
  font-weight: "normal";
  font-style: normal;
}
@font-face {
  font-family: "PL";
  src: url("fonts/PhonkSans-Light.eot?#iefix") format("embedded-opentype"), url("fonts/PhonkSans-Light.woff") format("woff"), url("fonts/PhonkSans-Light.woff2") format("woff2"), url("fonts/PhonkSans-Light.ttf") format("truetype");
  font-weight: "normal";
  font-style: normal;
}
@font-face {
  font-family: "PM";
  src: url("fonts/PhonkSans-Medium.eot?#iefix") format("embedded-opentype"), url("fonts/PhonkSans-Medium.woff") format("woff"), url("fonts/PhonkSans-Medium.woff2") format("woff2"), url("fonts/PhonkSans-Medium.ttf") format("truetype");
  font-weight: "normal";
  font-style: normal;
}
@font-face {
  font-family: "PR";
  src: url("fonts/PhonkSans-Regular.eot?#iefix") format("embedded-opentype"), url("fonts/PhonkSans-Regular.woff") format("woff"), url("fonts/PhonkSans-Regular.woff2") format("woff2"), url("fonts/PhonkSans-Regular.ttf") format("truetype");
  font-weight: "normal";
  font-style: normal;
}
@font-face {
  font-family: "PSB";
  src: url("fonts/PhonkSans-SemiBold.eot?#iefix") format("embedded-opentype"), url("fonts/PhonkSans-SemiBold.woff") format("woff"), url("fonts/PhonkSans-SemiBold.woff2") format("woff2"), url("fonts/PhonkSans-SemiBold.ttf") format("truetype");
  font-weight: "normal";
  font-style: normal;
}
@font-face {
  font-family: "PEB";
  src: url("fonts/PhonkSans-ExtraBold.eot?#iefix") format("embedded-opentype"), url("fonts/PhonkSans-ExtraBold.woff") format("woff"), url("fonts/PhonkSans-ExtraBold.woff2") format("woff2"), url("fonts/PhonkSans-ExtraBold.ttf") format("truetype");
  font-weight: "normal";
  font-style: normal;
}
.button {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  font-family: "PB", sans-serif;
  border-radius: 100px;
  padding: 12px 40px;
  font-size: 12px;
  line-height: 1;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
.button::before {
  display: none;
  content: "";
  height: 14px;
  width: 18px;
  margin-right: 10px;
  background-color: transparent;
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
}
.button_shadow {
  -webkit-box-shadow: 0px 5px 17px 0px rgba(79, 67, 96, 0.3);
  box-shadow: 0px 5px 17px 0px rgba(79, 67, 96, 0.3);
}
.button_fill-white {
  background-color: #fff;
  border: 2px solid #fff;
}
.button_fill-yellow {
  background-color: #FFC939;
  border: 2px solid #FFC939;
}
.button_outline-green {
  border: 2px solid #32C3C6;
}
.button_outline-yellow {
  border: 2px solid #FFC939;
}
.button_icon-tgm::before {
  background-image: url("images/icons-sprite.svg#icon-tgm-view-dark");
  display: block;
  width: 16px;
}
.button_icon-back::before {
  background-image: url("images/icons-sprite.svg#icon-back-view-dark");
  display: block;
  width: 18px;
}
.button_icon-geo::before {
  background-image: url("images/icons-sprite.svg#icon-geo-view-dark");
  display: block;
  width: 12px;
}

.container {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  padding-right: 20px;
  padding-left: 20px;
  margin-right: auto;
  margin-left: auto;
  max-width: 1200px;
  width: 100%;
}
@media (max-width: 640px) {
  .container {
    padding-right: 15px;
    padding-left: 15px;
  }
}

.dummy {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  padding-top: 60px;
  min-height: calc(100vh - 60px);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
.dummy__inner {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  max-width: 830px;
  padding-left: 20px;
  padding-right: 20px;
  margin: 0 auto;
}
@media (max-width: 480px) {
  .dummy__inner {
    padding-left: 15px;
    padding-right: 15px;
  }
}
.dummy__top {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 60px;
}
@media (max-width: 480px) {
  .dummy__top {
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    margin-bottom: 45px;
  }
}
.dummy__tel {
  text-decoration: none;
  white-space: nowrap;
  margin-right: 16px;
}
.dummy__tel span {
  display: block;
}
.dummy__tel span:nth-child(1) {
  font-family: "PL", sans-serif;
  margin-bottom: 4px;
  font-size: 10px;
  color: #704C9F;
}
.dummy__tel span:nth-child(2) {
  font-family: "PB", sans-serif;
  font-size: 16px;
  color: #2F2D68;
}
@media (max-width: 480px) {
  .dummy__tel {
    margin: 0;
  }
}
@media (max-width: 480px) {
  .dummy__logo {
    -webkit-box-ordinal-group: 0;
    -ms-flex-order: -1;
    order: -1;
    margin-bottom: 32px;
  }
}
.dummy__title {
  font-family: "PEB", sans-serif;
  margin-bottom: 10px;
  text-align: center;
  color: #32C3C6;
  font-size: 40px;
}
@media (max-width: 480px) {
  .dummy__title {
    font-size: 36px;
  }
}
@media (max-width: 360px) {
  .dummy__title {
    font-size: 30px;
  }
}
.dummy__subtitle {
  font-family: "PEB", sans-serif;
  margin-bottom: 40px;
  text-align: center;
  color: #2F2D68;
  font-size: 28px;
}
@media (max-width: 480px) {
  .dummy__subtitle {
    font-size: 24px;
  }
}
@media (max-width: 360px) {
  .dummy__subtitle {
    font-size: 20px;
  }
}
.dummy__text {
  font-size: 14px;
  line-height: 1.3;
  margin-bottom: 80px;
}
.dummy__text p {
  font-family: "MR", sans-serif;
  margin-bottom: 15px;
}
.dummy__text span {
  font-family: "MM", sans-serif;
}
.dummy__text strong {
  font-family: "MB", sans-serif;
}
.dummy__text a {
  font-family: "MB", sans-serif;
  color: #32C3C6;
}
@media (max-width: 480px) {
  .dummy__text a {
    display: block;
  }
}
@media (max-width: 480px) {
  .dummy__text {
    margin-bottom: 40px;
  }
}
.dummy__buttons {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}
@media (max-width: 480px) {
  .dummy__buttons {
    margin-bottom: 40px;
  }
}
.dummy__button {
  margin: 0 15px 15px;
}

body, html {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  font-size: 16px;
  line-height: 1.2;
  font-family: "MM", sans-serif;
  background-color: #fafafa;
  min-height: 100vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-flow: column nowrap;
  flex-flow: column nowrap;
}

.footer {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-top: auto;
}

p {
  margin-bottom: 10px;
}

strong {
  font-weight: bold;
}

em {
  font-style: italic;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
